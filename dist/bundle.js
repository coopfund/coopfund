(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var frontPage = function frontPage() {
	var template = '\n\t\t<section>\n\t\t\t<a class="anchor-100px" id="bucket-anchor-ref"></a>\n\t\t</section>\n\t\t<section id="stats">\n\t\t\t<div class="stat col-md-4">\n\t\t\t\t<div class="stat-header"></div>\n\t\t\t</div>\n\t\t\t<div class="stat col-md-4">\n\t\t\t\t<div class="stat-header"></div>\n\t\t\t</div>\n\t\t\t<div class="stat col-md-4">\n\t\t\t\t<div class="stat-header"></div>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class="summary"></section>\n\t';
	var article = document.createElement('article');
	article.id = 'front-page';
	article.innerHTML = template;
	return article;
};

exports.default = frontPage;

},{}],2:[function(require,module,exports){
'use strict';

var _frontPage = require('./front-page');

var _frontPage2 = _interopRequireDefault(_frontPage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CMS = 'https://coop-fund.firebaseio.com/pages.json?auth=Mf0D24zhDbEjiKFvViQo8jjjapVhj8iNtFIxRVx7'; //import key from './key';

var main = document.getElementsByTagName('main')[0];

var pageDirectory = [];

var renderImage = function renderImage() {};
// const parseContent = (content, key) => {
// 	 {
// 		return './assets/'
// 	} else return content;
// }

var count = 0;
var renderElementForFrontPage = function renderElementForFrontPage(elem, page) {
	if (count === 0) {
		var section = page.firstElementChild;
		// console.log('section', section);
		var a = document.createElement('a');
		a.class = 'anchor-100px';
		a.id = 'bucket-anchor-ref';
		section.append(a);
		var tag = renderElement(elem);
		console.log('tag: ', tag);
		section.append(tag);
		console.log('section: ', section);
	}
	count++;
};

var renderElement = function renderElement(elem, page) {
	if (elem.page === 1) null; // renderElementForFrontPage(elem, page);
	else {
			var tag = elem.key !== 'img' ? document.createElement(elem.key) : document.createElement('div');
			if (elem.key === 'img') tag.id = elem.class;else tag.innerHTML = elem.content;
			page.append(tag);
		}
};

var renderContent = function renderContent(content) {
	var pageCount = 0;
	content.forEach(function (entry) {
		var page = entry.page;
		if (pageDirectory[page] === undefined) {
			pageDirectory[page] = [entry];
			pageCount++;
		} else pageDirectory[page].push(entry);
	});
	console.log('pageDirectory: ', pageDirectory);

	var count = 1;
	while (count < pageCount) {
		console.log('count: ', count);
		if (count !== 1) {
			(function () {
				var pageContent = pageDirectory[count];
				var page = document.createElement('article');
				// make front page id
				main.append(page);

				pageContent.forEach(function (elem) {
					renderElement(elem, page);
				});
				count++;
			})();
		}
	}
};

var fetchData = function fetchData() {
	fetch(CMS).then(function (res) {
		return res.json();
	}).then(function (content) {
		return renderContent(content);
	}).catch(function (err) {
		return console.warn(err);
	});
};

var init = function init() {
	console.log('frontpage: ', (0, _frontPage2.default)());
	fetchData();
	main.append((0, _frontPage2.default)());
};

init();

},{"./front-page":1}]},{},[2])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
